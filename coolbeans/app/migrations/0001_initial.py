# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-10 02:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_bleach.models
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttemptModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttemptQuestionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('data', django_mysql.models.DynamicField()),
                ('attempt_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.AttemptModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseQuestionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('display_order', models.PositiveIntegerField(blank=True, default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('left_value', models.CharField(max_length=500)),
                ('right_value', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuizModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='GapFillQuestionModel',
            fields=[
                ('basequestionmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.BaseQuestionModel')),
                ('text', django_bleach.models.BleachField()),
            ],
            options={
                'abstract': False,
            },
            bases=('app.basequestionmodel',),
        ),
        migrations.CreateModel(
            name='MultipleChoiceModel',
            fields=[
                ('basequestionmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.BaseQuestionModel')),
                ('title', models.CharField(max_length=500)),
                ('answers', django_mysql.models.ListCharField(models.CharField(max_length=255), max_length=255, size=None)),
                ('correct', models.CharField(max_length=255)),
                ('score', models.PositiveIntegerField(blank=True, default=1, null=True)),
            ],
            options={
                'verbose_name': 'Multiple Choice Question',
                'verbose_name_plural': 'Multiple Choice Questions',
            },
            bases=('app.basequestionmodel',),
        ),
        migrations.CreateModel(
            name='PlaceholderQuestionModel',
            fields=[
                ('basequestionmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.BaseQuestionModel')),
                ('information', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('app.basequestionmodel',),
        ),
        migrations.CreateModel(
            name='TrueFalseQuestionModel',
            fields=[
                ('basequestionmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.BaseQuestionModel')),
                ('title', models.CharField(max_length=500)),
                ('answer', models.BooleanField()),
                ('score', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'True or False Question',
                'verbose_name_plural': 'True or False Questions',
            },
            bases=('app.basequestionmodel',),
        ),
        migrations.CreateModel(
            name='WordMatchingQuestionModel',
            fields=[
                ('basequestionmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.BaseQuestionModel')),
                ('title', models.CharField(max_length=500)),
                ('score', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Word Matching Question',
                'verbose_name_plural': 'Word Matching Questions',
            },
            bases=('app.basequestionmodel',),
        ),
        migrations.CreateModel(
            name='WordScrambleQuestionModel',
            fields=[
                ('basequestionmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.BaseQuestionModel')),
                ('title', models.CharField(max_length=500)),
                ('answer', models.CharField(max_length=500)),
                ('scrambled_sentence', models.CharField(max_length=500)),
                ('score', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Word Scramble Question',
                'verbose_name_plural': 'Word Scramble Questions',
            },
            bases=('app.basequestionmodel',),
        ),
        migrations.AddField(
            model_name='quizmodel',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.UserModel'),
        ),
        migrations.AddField(
            model_name='basequestionmodel',
            name='display_with',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.BaseQuestionModel'),
        ),
        migrations.AddField(
            model_name='basequestionmodel',
            name='quiz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.QuizModel'),
        ),
        migrations.AddField(
            model_name='attemptquestionmodel',
            name='question_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.BaseQuestionModel'),
        ),
        migrations.AddField(
            model_name='attemptmodel',
            name='quiz_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.QuizModel'),
        ),
        migrations.AddField(
            model_name='attemptmodel',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.UserModel'),
        ),
        migrations.AddField(
            model_name='pair',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.WordMatchingQuestionModel'),
        ),
    ]
